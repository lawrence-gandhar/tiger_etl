"""Add all remaining models

Revision ID: 310f4b46a4b2
Revises: 3373e01d40b9
Create Date: 2025-08-02 22:42:00.325793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '310f4b46a4b2'
down_revision: Union[str, Sequence[str], None] = '3373e01d40b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_groups_group_name'), 'user_groups', ['group_name'], unique=True)
    op.create_index(op.f('ix_user_groups_id'), 'user_groups', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('passwd', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('user_group_mapper',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_group_mapper_group_id'), 'user_group_mapper', ['group_id'], unique=False)
    op.create_index(op.f('ix_user_group_mapper_id'), 'user_group_mapper', ['id'], unique=False)
    op.create_index(op.f('ix_user_group_mapper_user_id'), 'user_group_mapper', ['user_id'], unique=False)
    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_access', sa.Boolean(), nullable=False),
    sa.Column('read_access', sa.Boolean(), nullable=False),
    sa.Column('write_access', sa.Boolean(), nullable=False),
    sa.Column('create_access', sa.Boolean(), nullable=False),
    sa.Column('edit_access', sa.Boolean(), nullable=False),
    sa.Column('execute_access', sa.Boolean(), nullable=False),
    sa.Column('drop_access', sa.Boolean(), nullable=False),
    sa.Column('view_access', sa.Boolean(), nullable=False),
    sa.Column('insert_access', sa.Boolean(), nullable=False),
    sa.Column('update_access', sa.Boolean(), nullable=False),
    sa.Column('delete_access', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_permissions_id'), 'user_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_user_permissions_user_id'), 'user_permissions', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False, comment='Unique session identifier (UUID or token)'),
    sa.Column('login_datetime', sa.DateTime(timezone=True), nullable=False, comment='Login timestamp (primary time dimension)'),
    sa.Column('logout_datetime', sa.DateTime(timezone=True), nullable=True, comment='Logout timestamp (null for active sessions)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Session active status'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='Client IP address (IPv4 or IPv6)'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='Client user agent string'),
    sa.Column('device_info', sa.Text(), nullable=True, comment='Additional device information (JSON or text)'),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=False, comment='Last activity timestamp (auto-updated)'),
    sa.Column('session_duration', sa.Integer(), nullable=True, comment='Session duration in seconds (computed)'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_sessions_active_login', 'user_sessions', ['is_active', 'login_datetime'], unique=False)
    op.create_index('idx_user_sessions_ip_address', 'user_sessions', ['ip_address'], unique=False)
    op.create_index('idx_user_sessions_last_activity', 'user_sessions', ['last_activity'], unique=False)
    op.create_index('idx_user_sessions_login_time', 'user_sessions', ['login_datetime'], unique=False)
    op.create_index('idx_user_sessions_logout_time', 'user_sessions', ['logout_datetime'], unique=False)
    op.create_index('idx_user_sessions_session_id', 'user_sessions', ['session_id'], unique=False)
    op.create_index('idx_user_sessions_time_range', 'user_sessions', ['login_datetime', 'logout_datetime'], unique=False)
    op.create_index('idx_user_sessions_user_active', 'user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_user_sessions_user_login', 'user_sessions', ['user_id', 'login_datetime'], unique=False)
    op.create_index('idx_user_sessions_user_session', 'user_sessions', ['user_id', 'session_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_ip_address'), 'user_sessions', ['ip_address'], unique=False)
    op.create_index(op.f('ix_user_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_last_activity'), 'user_sessions', ['last_activity'], unique=False)
    op.create_index(op.f('ix_user_sessions_login_datetime'), 'user_sessions', ['login_datetime'], unique=False)
    op.create_index(op.f('ix_user_sessions_logout_datetime'), 'user_sessions', ['logout_datetime'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_id'), 'user_sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_logout_datetime'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_login_datetime'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_last_activity'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_is_active'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_ip_address'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_session', table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_login', table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_active', table_name='user_sessions')
    op.drop_index('idx_user_sessions_time_range', table_name='user_sessions')
    op.drop_index('idx_user_sessions_session_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_logout_time', table_name='user_sessions')
    op.drop_index('idx_user_sessions_login_time', table_name='user_sessions')
    op.drop_index('idx_user_sessions_last_activity', table_name='user_sessions')
    op.drop_index('idx_user_sessions_ip_address', table_name='user_sessions')
    op.drop_index('idx_user_sessions_active_login', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_permissions_user_id'), table_name='user_permissions')
    op.drop_index(op.f('ix_user_permissions_id'), table_name='user_permissions')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_user_group_mapper_user_id'), table_name='user_group_mapper')
    op.drop_index(op.f('ix_user_group_mapper_id'), table_name='user_group_mapper')
    op.drop_index(op.f('ix_user_group_mapper_group_id'), table_name='user_group_mapper')
    op.drop_table('user_group_mapper')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_groups_id'), table_name='user_groups')
    op.drop_index(op.f('ix_user_groups_group_name'), table_name='user_groups')
    op.drop_table('user_groups')
    # ### end Alembic commands ###
